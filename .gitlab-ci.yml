stages:
  - test
  - build
  - deploy

variables:
  IMAGE_NAME: registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example-staging:v1.0.9

# -------- TEST STAGE --------
#test:
 # stage: test
  #image: python:3.12
  #before_script:
   # - pip install pytest pytest-cov
   # - pip install flask==1.1.2 jinja2==3.0.3 itsdangerous==2.0.1 werkzeug==1.0.1
  #script:
   # - cd app
    #- pytest --cov=app tests/

# -------- TEST STAGE --------
test:
  stage: test
  image: python:3.12
  before_script:
    - pip install -r app/requirements.txt
    - pip install pytest pytest-cov
  script:
    - cd app
    - pytest --cov=app tests/

# -------- BUILD STAGE --------
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
        --context=$CI_PROJECT_DIR
        --dockerfile=$CI_PROJECT_DIR/ci-cd/Dockerfile
        --destination=$IMAGE_NAME
        --verbosity=info

# -------- DEPLOY PRODUCTION (MANUAL) --------
deploy-production:
  stage: deploy
  image: alpine/k8s:1.27.3
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
  script:
    - kubectl apply -f k8s/production/namespace.yaml --validate=false
    - kubectl apply -f k8s/production/deployment.yaml --validate=false
    - kubectl apply -f k8s/production/service.yaml --validate=false
  when: manual
  only:
    - main




