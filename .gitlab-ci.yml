stages:
  - test
  - build
  - deploy-staging
  - deploy-production

variables:
  IMAGE_TAG: v1.0.9
  IMAGE_NAME: registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example-staging:$IMAGE_TAG
  STAGING_IMAGE: $IMAGE_NAME
  PROD_IMAGE:    registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example-production:$IMAGE_TAG

# -------- TEST STAGE --------
test:
  stage: test
  image: python:3.12
  before_script:
    - pip install -r app/requirements.txt
    - pip install pytest pytest-cov
  script:
    - cd app
    - pytest --cov=app tests/

# -------- BUILD STAGE --------
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - |
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
        > /kaniko/.docker/config.json
    - |
      /kaniko/executor \
        --context="$CI_PROJECT_DIR" \
        --dockerfile="$CI_PROJECT_DIR/ci-cd/Dockerfile" \
        --destination="$IMAGE_NAME" \
        --verbosity=info


# -------- AUTO DEPLOY TO STAGING --------
deploy-staging:
  stage: deploy-staging
  image: bitnami/kubectl:1.27
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
  script:
    - sed -i "s|IMAGE_PLACEHOLDER|$STAGING_IMAGE|g" k8s/staging/deployment.yaml
    - kubectl apply -f k8s/staging/namespace.yaml --validate=false
    - kubectl apply -f k8s/staging/deployment.yaml --validate=false
    - kubectl apply -f k8s/staging/service.yaml    --validate=false
  environment:
    name: staging
    url: http://$STAGING_HOST
  only:
    - main

# -------- MANUAL DEPLOY TO PROD --------
deploy-production:
  stage: deploy-production
  when: manual
  image: bitnami/kubectl:1.27
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
  script:
    - sed -i "s|IMAGE_PLACEHOLDER|$PROD_IMAGE|g" k8s/production/deployment.yaml
    - kubectl apply -f k8s/production/namespace.yaml --validate=false
    - kubectl apply -f k8s/production/deployment.yaml --validate=false
    - kubectl apply -f k8s/production/service.yaml    --validate=false
  environment:
    name: production
    url: http://$PROD_HOST
  only:
    - main
