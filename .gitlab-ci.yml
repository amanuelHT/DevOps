stages:
  - test
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  IMAGE_NAME: registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example:$IMAGE_TAG

test:
  stage: test
  image: python:3.12
  before_script:
    - pip install -r app/requirements.txt pytest pytest-cov
  script:
    - pytest --cov=app app/tests/

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
        > /kaniko/.docker/config.json
    - /kaniko/executor \
        --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/ci-cd/Dockerfile \
        --destination $IMAGE_NAME \
        --verbosity=info
  artifacts:
    expire_in: 1h
    reports:
      dotenv: .env       # so downstream jobs know $IMAGE_NAME

deploy-staging:
  stage: deploy
  image: alpine/k8s:1.27.3
  dependencies:
    - build
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
  script:
    - sed -i "s|image:.*|image: $IMAGE_NAME|g" k8s/staging/deployment.yaml
    - kubectl apply -f k8s/staging/namespace.yaml
    - kubectl apply -f k8s/staging/deployment.yaml
    - kubectl apply -f k8s/staging/service.yaml
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-production:
  stage: deploy
  image: alpine/k8s:1.27.3
  dependencies:
    - build
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
  script:
    - sed -i "s|image:.*|image: $IMAGE_NAME|g" k8s/production/deployment.yaml
    - kubectl apply -f k8s/production/namespace.yaml
    - kubectl apply -f k8s/production/deployment.yaml
    - kubectl apply -f k8s/production/service.yaml
  when: manual
  only:
    - main
