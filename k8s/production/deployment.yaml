apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-example
  namespace: production
  annotations:
    argocd-image-updater.argoproj.io/image-list: |
      flask-example=registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-example
  template:
    metadata:
      labels:
        app: flask-example
    spec:
      imagePullSecrets:
        - name: gitlab-registry-auth
      securityContext:
        runAsNonRoot: true
      containers:
        - name: flask-example
          image: registry.internal.uia.no/ikt206-g-25v-devops/group23/exam-ikt206/flask-example-production:v1.9
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: "250m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          env:
          - name: USE_POSTGRES
            value: "true"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: database
          - name: POSTGRES_HOST
            value: "postgres-production"
          - name: POSTGRES_PORT
            value: "5432"

